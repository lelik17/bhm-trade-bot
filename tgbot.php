<?

include "bhm_functions.php";

$tg_data = file_get_contents('php://input');
$tg_data = json_decode($tg_data, true);

if (isset($tg_data['message'])) { // –ø—Ä–∏—Å–ª–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
	$message = $tg_data['message']['text'];
	$chat_id = $tg_data['message']['chat']['id'];
	$type = "message";
}

if (isset($tg_data['callback_query'])) { // –ø—Ä–∏—Å–ª–∞–ª–∏ callback
	$callback_query = $tg_data['callback_query'];
	$message = $callback_query['data'];
	$message_id = ['callback_query']['message']['message_id'];
	$chat_id = $callback_query['message']['chat']['id'];
	$type = "callback";
}

if (isset($tg_data["callback_query"]["message"]["chat"]['type'])) {
	if ($tg_data["callback_query"]["message"]["chat"]['type']!="private") {
		// —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–∏—à–µ–º
		exit();
	}
}

if (isset($tg_data["message"]["chat"]['type'])) {
	if ($tg_data["message"]["chat"]['type']!="private") {
		// —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –ø–∏—à–µ–º
		exit();
	}
}

$state = get_state($chat_id);

if ($type=="message") { // –µ—Å–ª–∏ —é–∑–µ—Ä –ø—Ä–∏—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
	switch($message) {
	    case '/start':  
		    bot_welcome_message($chat_id);
			break;
		case '‚ûï –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞':  
		    bot_add_task($chat_id);
			break;
		case 'üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏':  
		    $res = mysqli_query($linksql, "SELECT * FROM tasks WHERE user_id='$chat_id' AND max_trade!='0' AND need_profit!='0'");
			$tasks = mysqli_num_rows($res);

			if ($tasks>0) {
				$n = 0;
				$keyboard = '{"inline_keyboard":[';
				while ($task = mysqli_fetch_array($res)) {
					$n++;

					if ($task["type"]=="arbitrage") {
						$type = "–ê—Ä–±–∏—Ç—Ä–∞–∂";
					}

					$task_name = "üî∏" . $task["data"] . " - ".$type . " - min " . $task["need_profit"] . "%";
					$keyboard .= '[{"text":"'.$task_name.'","callback_data":"get-task-'.$task["id"].'"}]';
					if ($n!=mysqli_num_rows($res)) {
						$keyboard .= ",";
					}
				}
				$keyboard .= ']}';
				bot_sendmessage($chat_id, "–í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:", $keyboard);
			} else {
				$inline_button1 = array("text"=>"‚ûï –°–æ–∑–¥–∞—Ç—å","callback_data"=>'add-task');
				$inline_keyboard = [[$inline_button1]];
				$keyboard=array("inline_keyboard"=>$inline_keyboard);
				$replyMarkup = json_encode($keyboard); 
				bot_sendmessage($chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ —Ç–æ—Ä–≥–æ–≤–ª–µ. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é", $replyMarkup);
			}
			break;
		case 'üÜò –ü–æ–º–æ—â—å':  
		    bot_sendmessage($chat_id, "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –°–æ–æ–±—â–∏—Ç—å –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –±–∞–≥–∞—Ö –∏–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ @lkk17");
			break;
		default: // –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
			switch($state) {
				case 'add_task_step1':
					$message = trim(strtoupper($message));
					if (bithumb_check_coin($message)) {
						save_state($chat_id, "add_task_step2", $message);
						bot_show_strategies($chat_id);
					} else {
						bot_sendmessage($chat_id, "–£–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–∫–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
					}
					break;
				case 'add_task_step2':
					bot_show_strategies($chat_id);
					break;
				case 'add_task_step3':
					save_state($chat_id, "add_task_step4", $message);
					bot_sendmessage($chat_id, "–°–æ–æ–±—â–∏—Ç–µ –≤–∞—à Secret Key –¥–ª—è –±–∏—Ä–∂–∏ bithumb.pro");
					break;
				case 'add_task_step4':
					$secret_key = trim($message);
					$api_key = get_state_data($chat_id, "add_task_step4");
					$task_id = get_state_data($chat_id, "add_task_step3");

					if (bithumb_check_login($api_key, $secret_key)) {
						bot_sendmessage($chat_id, "–°–ø–∞—Å–∏–±–æ, –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ.");
						mysqli_query($linksql, "UPDATE tasks SET api_key='$api_key', secret='$secret_key' WHERE id='$task_id' AND user_id='$chat_id'");
						bot_sendmessage($chat_id, "<strong>–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π % –ø—Ä–æ—Ñ–∏—Ç–∞</strong> <i>(–ù–∞–ø—Ä–∏–º–µ—Ä: 1.5%)</i>. –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–¥–µ–ª–∫–∏, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–µ –¥–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é. –ü—Ä–æ—Ñ–∏—Ç –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é –±–∏—Ä–∂–∏.");
						save_state($chat_id, "add_task_step5", $task_id);
					} else {
						bot_sendmessage($chat_id, "–î–∞–Ω–Ω—ã–µ —É–∫–∞–∑–∞–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.");
						bot_sendmessage($chat_id, "–°–æ–æ–±—â–∏—Ç–µ –≤–∞—à API-–∫–ª—é—á –¥–ª—è –±–∏—Ä–∂–∏ bithumb.pro.");
						save_state($chat_id, "add_task_step3", $task_id);
					}
					break;
				case 'add_task_step5':
					$profit = floatval($message);
					if (empty($profit) OR $profit<=0) {
						bot_sendmessage($chat_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.");
					} else {
						$task_id = get_state_data($chat_id, "add_task_step5");
						mysqli_query($linksql, "UPDATE tasks SET need_profit='$profit' WHERE id='$task_id' AND user_id='$chat_id'");
						bot_sendmessage($chat_id, "–£–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏ (–≤ USDT-—ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–µ). <i>–ù–∞–ø—Ä–∏–º–µ—Ä: 100</i>");
						save_state($chat_id, "add_task_step6", $task_id);
					}
					
					break;
				case 'add_task_step6':
					$max_trade = floatval($message);
					if (empty($max_trade) OR $max_trade<=0) {
						bot_sendmessage($chat_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.");
					} else {
						$task_id = get_state_data($chat_id, "add_task_step6");
						mysqli_query($linksql, "UPDATE tasks SET max_trade='$max_trade' WHERE id='$task_id' AND user_id='$chat_id'");
						bot_sendmessage($chat_id, "üëç");
						bot_sendmessage($chat_id, "–¢–æ—Ä–≥–æ–≤–ª—è –∑–∞–ø—É—â–µ–Ω–∞. –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–∫–∞—Ö.");
						clear_states($chat_id);
						bot_show_menu($chat_id);
					}
					
					break;
			}
			
	}
}

if ($type=="callback") { // –µ—Å–ª–∏ —é–∑–µ—Ä –∫–ª–∏–∫–Ω—É–ª –ø–æ –∫–Ω–æ–ø–∫–µ
	switch($message) {
		case 'add-task':
			bot_add_task($chat_id);
			break;
		case 'strategy-arbitrage':
			$ticker = get_state_data($chat_id, "add_task_step2");
			$pairs = bithumb_get_pairs($ticker);

			if (sizeof($pairs)<2) {
				bot_sendmessage($chat_id, "–ù–µ–ª—å–∑—è –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ê—Ä–±–∏—Ç—Ä–∞–∂ –¥–ª—è —Ç–∏–∫–µ—Ä–∞ $ticker, —Ç–∞–∫ –∫–∞–∫ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –ø–∞—Ä–∞.");
				clear_states();
				bot_add_task($chat_id);
				exit();
			}

			$n = 0;
			foreach ($pairs AS $pair) {
				if ($n==0) {
					$pairs_text = $pair;
					$pair = str_replace("$ticker-", "", $pair);
					$pair = str_replace("-$ticker", "", $pair);
					$pairs_dop_text = $pair;
				} else {
					$pairs_text .= ", $pair";
					$pair = str_replace("$ticker-", "", $pair);
					$pair = str_replace("-$ticker", "", $pair);
					$pairs_dop_text .= " –∏ $pair";
				}
				$n++;
			}

			$min_trade = bithumb_get_min_trade($ticker);

			mysqli_query($linksql, "INSERT INTO tasks SET user_id='$chat_id', type='arbitrage', data='$ticker', min_trade='$min_trade'");
			$task_id = mysqli_insert_id($linksql);
			save_state($chat_id, "add_task_step3", $task_id);
			bot_sendmessage($chat_id, "–¢–æ—Ä–≥–æ–≤–ª—è –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –≤ –ø–∞—Ä–∞—Ö $pairs_text, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ $pairs_dop_text –¥–ª—è —Ä–∞–±–æ—Ç—ã.");

			$res = mysqli_query($linksql, "SELECT DISTINCT(api_key) FROM tasks WHERE user_id='$chat_id' AND api_key!='' AND secret!='' ORDER BY id DESC LIMIT 5");
			$tasks = mysqli_num_rows($res);

			if ($tasks>0) {
				$n = 0;
				$keyboard = '{"inline_keyboard":[';
				while ($task = mysqli_fetch_array($res)) {
					$n++;
					$keyboard .= '[{"text":"'.$task["api_key"].'","callback_data":"api-key-'.$task["api_key"].'"}]';
					if ($n!=mysqli_num_rows($res)) {
						$keyboard .= ",";
					}
				}
				$keyboard .= ']}';
				bot_sendmessage($chat_id, "<strong>–°–æ–æ–±—â–∏—Ç–µ –≤–∞—à API-–∫–ª—é—á</strong> –¥–ª—è –±–∏—Ä–∂–∏ bithumb.pro –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞.", $keyboard);
			} else {
				bot_sendmessage($chat_id, "<strong>–°–æ–æ–±—â–∏—Ç–µ –≤–∞—à API-–∫–ª—é—á</strong> –¥–ª—è –±–∏—Ä–∂–∏ bithumb.pro");
			}			
			break;
		default: // –µ—Å–ª–∏ callback –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞

			if (substr($message, 0, 9)=="get-task-") { 
				$task_id = substr($message, 9);

				$res = mysqli_query($linksql, "SELECT * FROM tasks WHERE id='$task_id' AND user_id='$chat_id'");
				$task = mysqli_fetch_assoc($res);

				if ($task["type"]=="arbitrage") {
					$type = "–ê—Ä–±–∏—Ç—Ä–∞–∂";
				}

				$text = "<strong>–ó–∞–¥–∞—á–∞:</strong> $type " . $task["data"] . " —Å –ø—Ä–æ—Ñ–∏—Ç–æ–º " . $task["need_profit"] . "%\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏: " . $task["max_trade"] . " USDT";

				$inline_button1 = array("text"=>"–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã","callback_data"=>'edit-task-'.$task_id);
				$inline_button2 = array("text"=>"–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É","callback_data"=>'delete-task-'.$task_id);
				$inline_keyboard = [[$inline_button1],[$inline_button2]];
				$keyboard=array("inline_keyboard"=>$inline_keyboard);
				$replyMarkup = json_encode($keyboard); 

				bot_sendmessage($chat_id, $text, $replyMarkup);
			}

			if (substr($message, 0, 10)=="edit-task-") { 
				$task_id = substr($message, 10);
				bot_sendmessage($chat_id, "<strong>–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π % –ø—Ä–æ—Ñ–∏—Ç–∞</strong> <i>(–ù–∞–ø—Ä–∏–º–µ—Ä: 1.5%)</i>. –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–¥–µ–ª–∫–∏, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–µ –¥–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é. –ü—Ä–æ—Ñ–∏—Ç –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é –±–∏—Ä–∂–∏.");
				save_state($chat_id, "add_task_step5", $task_id);	
			}

			if (substr($message, 0, 12)=="delete-task-") { 
				$task_id = substr($message, 12);
				$inline_button1 = array("text"=>"–î–∞, —É–¥–∞–ª–∏—Ç—å","callback_data"=>'go-delete-task-'.$task_id);
				$inline_keyboard = [[$inline_button1]];
				$keyboard=array("inline_keyboard"=>$inline_keyboard);
				$replyMarkup = json_encode($keyboard); 

				bot_sendmessage($chat_id, "–¢–æ—á–Ω–æ —É–¥–∞–ª–∏—Ç—å?", $replyMarkup);
			}

			if (substr($message, 0, 15)=="go-delete-task-") { 
				$task_id = substr($message, 15);

				mysqli_query($linksql, "DELETE FROM tasks WHERE id='$task_id' AND user_id='$chat_id'");

				$inline_button1 = array("text"=>"‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É","callback_data"=>'add-task');
				$inline_keyboard = [[$inline_button1]];
				$keyboard=array("inline_keyboard"=>$inline_keyboard);
				$replyMarkup = json_encode($keyboard); 

				bot_sendmessage($chat_id, "<strong>–ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞</strong>. –ú–æ–∂–µ—Ç —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é?", $replyMarkup);
			}

			if (substr($message, 0, 8)=="api-key-") { 
				$api_key = substr($message, 8);

				$res = mysqli_query($linksql, "SELECT * FROM tasks WHERE api_key='$api_key' AND user_id='$chat_id' ORDER BY id DESC LIMIT 1");
				$api = mysqli_fetch_assoc($res);

				$new_task_id = get_state_data($chat_id, "add_task_step3");
				mysqli_query($linksql, "UPDATE tasks SET api_key='".$api["api_key"]."', secret='".$api["secret"]."' WHERE id='$new_task_id' AND user_id='$chat_id'");
				bot_sendmessage($chat_id, "<strong>–£–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π % –ø—Ä–æ—Ñ–∏—Ç–∞</strong> <i>(–ù–∞–ø—Ä–∏–º–µ—Ä: 1.5%)</i>. –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–¥–µ–ª–∫–∏, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–µ –¥–∞–Ω–Ω–æ–º—É —É—Å–ª–æ–≤–∏—é. –ü—Ä–æ—Ñ–∏—Ç –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é –±–∏—Ä–∂–∏.");
				save_state($chat_id, "add_task_step5", $new_task_id);
			}
	}
}


?>